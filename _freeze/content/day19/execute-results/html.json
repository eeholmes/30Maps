{
  "hash": "8eaa3a1c8a26eb67383e11158bf47df1",
  "result": {
    "markdown": "---\ntitle: \"Day 19 globe\"\n---\n\n\n## Code source inspriation\n\n* https://twitter.com/ryanahart/status/1593966022553489410\n* https://twitter.com/dhernangomez/status/1591710364571504640\n* https://twitter.com/geokaramanis/status/1593999504323317760\n* https://github.com/curatedmess/30DayMapChallenge/blob/main/2022/11192022/qatar.R\n\nBut see this globe by @geokaramanis for the Day 7 raster entry [https://github.com/gkaramanis/30DayMapChallenge/tree/main/2022/07-raster-earth](https://github.com/gkaramanis/30DayMapChallenge/tree/main/2022/07-raster-earth)\n\n## Code to download the data\n\nThe basic libraries\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(sf)\n```\n:::\n\n\nGet the Seattle lat/lon\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\n# Center\ncity_coords <- tibble(address = \"Seattle, Washington\") |> \n  tidygeocoder::geocode(address, method = 'osm', long = long, lat = lat)\nlong <- city_coords$long[1]\nlat <- city_coords$lat[1]\ncrs2 <- 6384 # https://epsg.io/6384\ncoord_center <-\n  tibble(long, lat) %>%\n  sf::st_as_sf(coords = c(\"long\", \"lat\"), crs = 4326)\n```\n:::\n\n\nSet the projection. Had to futz a bit to get something that was close and didn't throw an error w ggplot.\n\n::: {.cell}\n\n```{.r .cell-code}\ncrs_string <- paste0(\"+proj=ortho +lat_0=\", lat, \" +lon_0=\", long)\n# crs_string <- \"+proj=ortho +lat_0=45 +lon_0=-105\"\n```\n:::\n\n\nGet US elevations and define hill shading. This will be spatraster and comes with a projection which you can check with `terra::crs()`. We don't need to change that; just need to know that it is specified.\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nlibrary(tidyterra) # for geom_spatraster\nlibrary(geodata)\nlibrary(scales)\nr <- geodata::elevation_global(res=10, path = tempdir())\nnames(r) <- \"alt\"\n\nslope <- terra::terrain(r, \"slope\", unit = \"radians\")\naspect <- terra::terrain(r, \"aspect\", unit = \"radians\")\nhill <- terra::shade(slope, aspect, 30, 270)\n\n# give the hill shading a name so I can refer to it in aes()\nnames(hill) <- \"shades\"\n```\n:::\n\n\nCreate a blue globe that will represent the ocean. 637100 is the radius of the earth in meters.\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\n# these are sf functions\nocean <- st_point(x = c(0,0)) %>%\n  st_buffer(dist = 6371000) %>%\n  st_sfc(crs = crs_string)\n```\n:::\n\n\n\n## Plot code\n\nCreate my globe. The palette \"dem_poster\" comes from tidyterra package.\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nlibrary(ggfx) # for with_shadow\np1 <- ggplot() +\n  with_shadow(geom_sf(data = ocean, fill = \"#BBDEFB\", color = NA), sigma = 30, x_offset = 25, y_offset = 25, color = \"#58595d\") +\n  geom_spatraster(data = hill, aes(fill=shades), maxcell = Inf) +\n  geom_spatraster(data=r, maxcell = Inf) +\n  scale_fill_hypso_tint_c(limits = as.vector(minmax(r)), \n                          palette = \"dem_poster\",\n                          alpha =0.8,\n                          labels = scales::label_comma(),\n                          breaks = c(seq(0,1000, 250), seq(2000, 6000, 1000))) +\n  guides(fill=guide_legend(title = \"elevation\", reverse = TRUE)) +\n  coord_sf(crs = crs_string) +\n  theme_void()\np1\n```\n\n::: {.cell-output-display}\n![](day19_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\nThen add some annotation. The x and y units are in meters, so the nudge has to be huge (millions).\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nlibrary(\"ggrepel\")\np2 <- p1 + geom_sf(data=coord_center) + \n  geom_text_repel(data = coord_center, aes(x=st_coordinates(coord_center)[1], y=st_coordinates(coord_center)[2]), label=\"Seattle\", \n        nudge_x = -3371000, nudge_y = -1371000) +\n  labs(\n    title = \"Globe with elevations\",\n    caption = \"Graphic: EE Holmes\"\n  ) +\n  theme(\n    plot.background = element_rect(fill = \"grey97\", color = NA),\n    plot.margin = unit(c(.5,.5,.5,.5), \"cm\"),\n    plot.title = element_text(hjust = 0.045, size = 26, face = \"bold\")\n  )\np2\n```\n\n::: {.cell-output-display}\n![](day19_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\nSwap out that square background with one with rounded corners. Well this didn't really work since I couldn't figure out how to save.\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nlibrary(grid)\ng <- ggplotGrob(p2)\nbg <- g$grobs[[1]]\nround_bg <- roundrectGrob(x=bg$x, y=bg$y, width=bg$width, height=bg$height,\n                          r=unit(0.1, \"snpc\"),\n                          just=bg$just, name=bg$name, gp=bg$gp, vp=bg$vp)\ng$grobs[[1]] <- round_bg\ngrid.draw(g)\n```\n:::\n\n\nFor some reason the shadowing looks wrong in the html. Looks like this in the saved image:\n\n::: {.cell}\n\n```{.r .cell-code}\nknitr::include_graphics(here::here(\"content\", \"globe_elevation.png\"))\n```\n\n::: {.cell-output-display}\n![](globe_elevation.png){width=1280}\n:::\n:::\n\n\n## Save image\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggsave(paste0(\"globe_elevation\", \".png\"), dpi = 320, width = 8, height = 8)\n```\n:::\n",
    "supporting": [
      "day19_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}