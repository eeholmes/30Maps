{
  "hash": "965172bc2f71064423a9464cb753f3a7",
  "result": {
    "markdown": "---\ntitle: \"Day 8 osm data\"\n---\n\n\n## Code source\n\nCode from https://github.com/AbdoulMa/30DayMapChallenge/tree/main/Day8\n\n## Code to download the data\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nlibrary(osmdata)\nlibrary(sf)\nlibrary(tidyverse)\n\nbbx <- getbb(paste0(\"Winthrop\", \",\", \"Washington\"))\n# Get motorway, trunk, primary, secondary, tertiary ways ----\nhighways <- bbx %>%\n  opq() %>%\n  add_osm_feature(\n    key = \"highway\",\n    value = c(\n      \"motorway\",\n      \"trunk\",\n      \"primary\",\n      \"secondary\",\n      \"tertiary\",\n      \"motorway_link\",\n      \"trunk_link\",\n      \"primary_link\",\n      \"secondary_link\",\n      \"tertiary_link\"\n    )\n  ) %>%\n  osmdata_sf()\n\n# Get small streets, pedestrian paths, living streets ----\nstreets <- bbx %>%\n  opq() %>%\n  add_osm_feature(\n    key = \"highway\",\n    value = c(\n      \"residential\",\n      \"living_street\",\n      \"service\",\n      \"unclassified\",\n      \"pedestrian\",\n      \"footway\",\n      \"track\",\n      \"path\"\n    )\n  ) %>%\n  osmdata_sf()\n\n# Get landuse ---- \nlanduse <- opq(bbx) |> \n  add_osm_feature(key = \"landuse\") |> \n  osmdata_sf() |> \n  unname_osmdata_sf()\n\n# Get buildings ---- \nbuildings <- opq(bbx) |> \n  add_osm_feature(key = \"building\") %>%\n  osmdata_sf() |> \n  unname_osmdata_sf()\n\n# Center and circle ----\ncity_coords <- tibble(address = \"Winthrop, Washington\") |> \n  tidygeocoder::geocode(address, method = 'osm', long = long, lat = lat)\n\nlong <- city_coords$long[1]\nlat <- city_coords$lat[1]\n\ncrs2 <- 6384 # https://epsg.io/6384\ncenter_proj <-\n  tibble(long, lat) %>%\n  st_as_sf(coords = c(\"long\", \"lat\"), crs = 4326)\n\n# circle to crop in ----\ndist <-  3500\ncircle <- tibble(long, lat) %>%\n  st_as_sf(coords = c(\"long\", \"lat\"), crs = 4326) %>%\n  st_transform(crs = crs2) %>%\n  st_buffer(dist = dist) %>%\n  st_transform(crs = 4326)\n\nstreets_lines <- st_intersection(circle, streets$osm_lines)\nhighways_lines <- st_intersection(circle, highways$osm_lines)\nbuildings_polygons <- st_intersection(circle, buildings$osm_polygons)\nlanduse_polygons <- st_intersection(circle, landuse$osm_polygons)\n```\n:::\n\n\n## Plot code\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nggplot() +\n  geom_sf(data = circle, color = \"black\", fill =  \"white\") +\n  geom_sf(\n    data = landuse_polygons,\n    fill = \"#646464\", \n    size = .05,\n    alpha = .95\n  ) + \n  geom_sf(\n    data = buildings_polygons, \n    size = .05,\n    fill = \"#c8c8c8\", \n    color = \"#c8c8c8\", \n    alpha = .75\n  ) + \n  geom_sf(\n    data = streets_lines,\n    col = \"grey40\",\n    size = .4,\n    alpha = .65\n  ) +\n  geom_sf(\n    data = highways_lines,\n    col = \"grey25\",\n    size = .6,\n    alpha = .8\n  ) +\n  ggtitle(\"Winthrop\") +\n  theme_void() + \n  theme(\n    plot.title = element_text(hjust = 0.5),\n    plot.background = element_rect(fill = \"grey98\", color = NA),\n    plot.margin = margin(b = 10)\n    )\n```\n\n::: {.cell-output-display}\n![](day8_files/figure-html/unnamed-chunk-2-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "day8_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}