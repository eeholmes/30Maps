{
  "hash": "fc7224c73d64a212737d9411e3b99346",
  "result": {
    "markdown": "---\ntitle: \"Day 7 Raster\"\n---\n\n\n## Libraries\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrequire(devtools)\ndevtools::install_github(\"ropensci/rerddap\")\ndevtools::install_github(\"rmendels/rerddapXtracto\") \n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n── Attaching packages ─────────────────────────────────────── tidyverse 1.3.2 ──\n✔ ggplot2 3.4.0      ✔ purrr   0.3.5 \n✔ tibble  3.1.8      ✔ dplyr   1.0.10\n✔ tidyr   1.2.1      ✔ stringr 1.4.1 \n✔ readr   2.1.3      ✔ forcats 0.5.2 \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\n```\n:::\n\n```{.r .cell-code}\nlibrary(tidyterra)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'tidyterra'\n\nThe following object is masked from 'package:stats':\n\n    filter\n```\n:::\n:::\n\n\n## Download sea surface temperature data\n\nI will download the optimal interpolation sea surface temperature from CoastWatch. The bounding box is off the coast of Washington, USA.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfilePath <- here::here(\"content\", \"data\", \"day7_sst_raster.RData\")\nlats <- c(40.375, 50.375)\nlons <- c(-141.875, -120.875)\nif (!file.exists(filePath)) {\ndf_info <- rerddap::info(\"ncdcOisst21Agg_LonPM180\")\ndf <- rerddap::griddap(\"ncdcOisst21Agg_LonPM180\", latitude = lats, longitude = lons, time = c(\"2021-06-19\", \"2021-06-19\"), fields = \"sst\")$data\nsave(df, file=filePath)\n}else{\n  load(filePath)\n}\n```\n:::\n\n\nTurn this into a raster. Need to tell raster that this is lat/long data.\n\n::: {.cell}\n\n```{.r .cell-code}\ndf2 <- data.frame(x=df$lon, y=df$lat, z=df$sst)\nras <- raster::rasterFromXYZ(df2, crs = \"+proj=longlat\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(terra)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nterra 1.6.17\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'terra'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following object is masked from 'package:tidyr':\n\n    extract\n```\n:::\n\n```{.r .cell-code}\nr <- terra::rast(ras)\nnames(r) <- \"alt\"\nsetMinMax(r)\nslope <- terra::terrain(r, \"slope\", unit = \"radians\")\naspect <- terra::terrain(r, \"aspect\", unit = \"radians\")\nhill <- terra::shade(slope, aspect, 10, 200)\nnames(hill) <- \"shades\"\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(scales)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'scales'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following object is masked from 'package:terra':\n\n    rescale\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following object is masked from 'package:purrr':\n\n    discard\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following object is masked from 'package:readr':\n\n    col_factor\n```\n:::\n\n```{.r .cell-code}\n# Hillshading, but we need a palette\npal_greys <- hcl.colors(1000, \"Grays\")\n\nindex <- hill %>%\n  mutate(index_col = rescale(shades, to = c(1, length(pal_greys)))) %>%\n  mutate(index_col = round(index_col)) %>%\n  pull(index_col)\n# Get cols\nvector_cols <- pal_greys[index]\n\nhill_plot <- ggplot() +\n  geom_spatraster(\n    data = hill, fill = vector_cols, maxcell = Inf,\n    alpha = 1\n  )\nhill_plot\n```\n\n::: {.cell-output-display}\n![](day7_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nr_limits <- minmax(r) %>% as.vector()\n# Rounded to lower and upper 500\n#r_limits <- c(floor(r_limits[1] / 500), ceiling(r_limits[2] / 500)) * 500\n\nbase_plot <- hill_plot +\n  geom_spatraster(data = r, maxcell = Inf) +\n  scale_fill_hypso_tint_c(\n    limits = r_limits,\n    palette = \"dem_poster\",\n    alpha = 0.4,\n    labels = label_comma(),\n    # For the legend I use custom breaks\n    breaks = seq(-300, 1000, 100)\n  )\nbase_plot\n```\n\n::: {.cell-output-display}\n![](day7_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyterra)\nhill_plot +\n  geom_spatraster(data=r, maxcell = Inf) +\n  scale_fill_hypso_tint_c(limits = as.vector(minmax(r)), \n                          palette = \"etopo1\",\n                          alpha =0.4,\n                          direction = 1,\n                          labels = scales::label_comma()) +\n  guides(fill=guide_legend(title = \"elevation\", reverse = FALSE))\n```\n\n::: {.cell-output-display}\n![](day7_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot() + \n  geom_spatraster(data=slope, maxcell = Inf) +\n  scale_fill_whitebox_c(palette = \"muted\", alpha = 0.9, direction = 1)\n```\n\n::: {.cell-output-display}\n![](day7_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n\n```{.r .cell-code}\n  geom_spatraster(data=r, maxcell = Inf) +\n  scale_fill_whitebox_c(palette = \"muted\", alpha = 0.9, direction = 1)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nNULL\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(colorspace)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'colorspace'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following object is masked from 'package:terra':\n\n    RGB\n```\n:::\n\n```{.r .cell-code}\nhill_plot +\n  geom_spatraster(data=r, maxcell = Inf) +\n  scale_fill_continuous_diverging(\n    palette = \"Blue-Red-2\", p2 = .1, alpha=.8, mid=mean(df$sst, na.rm = TRUE))\n```\n\n::: {.cell-output-display}\n![](day7_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n\n\n\n## Plot the raster\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(raster)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nLoading required package: sp\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'raster'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following object is masked from 'package:tidyterra':\n\n    select\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following object is masked from 'package:dplyr':\n\n    select\n```\n:::\n\n```{.r .cell-code}\nlibrary(ggplot2)\ngg <- ggplot(df) +\n  geom_raster(aes(longitude, latitude, fill = sst)) +\n  scale_fill_gradient2(midpoint = mean(df$sst, na.rm = TRUE),\n                       low = \"blue\",\n                       mid = \"white\",\n                       high = \"red\") +\n  labs(x = NULL,\n       y = NULL,\n       fill = \"Celcius\",\n       title = \"Sea Surface Temperature (SST)\") +\n  theme_bw() +\n  scale_x_continuous(limits = lons, expand = c(-0.01, -0.01)) +\n  scale_y_continuous(limits = lats, expand = c(-0.01, -0.01))\ngg\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 248 rows containing missing values (`geom_raster()`).\n```\n:::\n\n::: {.cell-output-display}\n![](day7_files/figure-html/unnamed-chunk-11-1.png){width=672}\n:::\n:::\n\n\n## Add a coastline\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncoast <- rnaturalearth::ne_coastline(scale = 50, returnclass = \"sp\")\nwa_or_coast <- raster::crop(coast, raster::extent(lons[1], lons[2], lats[1], lats[2]))\nplot(wa_or_coast)\n```\n\n::: {.cell-output-display}\n![](day7_files/figure-html/unnamed-chunk-12-1.png){width=672}\n:::\n:::\n\n\nThe way that ggplot2 works is to run `fortify()` on the SpatialLines object to create a data frame. Then we use `geom_path()` to plot that. But if you look at the coast, you see lots of islands. We need to add `grouping` to tell geom_path() that there are these groups of paths in the data frame.\n\n::: {.cell}\n\n```{.r .cell-code}\ngg +\n  geom_path(data=wa_or_coast,  aes(x=long,y=lat, grouping=id), size=1, na.rm=TRUE)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in geom_path(data = wa_or_coast, aes(x = long, y = lat, grouping =\nid), : Ignoring unknown aesthetics: grouping\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 248 rows containing missing values (`geom_raster()`).\n```\n:::\n\n::: {.cell-output-display}\n![](day7_files/figure-html/unnamed-chunk-13-1.png){width=672}\n:::\n:::",
    "supporting": [
      "day7_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}