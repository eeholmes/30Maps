{
  "hash": "37f67f3d4c589bf6cb6a572efa837529",
  "result": {
    "markdown": "---\ntitle: \"Day 7 Raster\"\n---\n\n\n## Libraries\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrequire(devtools)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nLoading required package: devtools\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nLoading required package: usethis\n```\n:::\n\n```{.r .cell-code}\ndevtools::install_github(\"ropensci/rerddap\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nSkipping install of 'rerddap' from a github remote, the SHA1 (c791005d) has not changed since last install.\n  Use `force = TRUE` to force installation\n```\n:::\n\n```{.r .cell-code}\ndevtools::install_github(\"rmendels/rerddapXtracto\") \n```\n\n::: {.cell-output .cell-output-stderr}\n```\nSkipping install of 'rerddapXtracto' from a github remote, the SHA1 (6299090e) has not changed since last install.\n  Use `force = TRUE` to force installation\n```\n:::\n:::\n\n\n## Download sea surface temperature data\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfilePath <- here::here(\"content\", \"data\", \"day7_sst_raster.RData\")\n```\n:::\n\n\nI will download the optimal interpolation sea surface temperature from CoastWatch. The bounding box is off the coast of Washington, USA.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlats <- c(40.375, 50.375)\nlons <- c(-141.875, -120.875)\nif (!file.exists(filePath)) {\ndf_info <- rerddap::info(\"ncdcOisst21Agg_LonPM180\")\ndf <- rerddap::griddap(\"ncdcOisst21Agg_LonPM180\", latitude = lats, longitude = lons, time = c(\"2021-06-19\", \"2021-06-19\"), fields = \"sst\")$data\nsave(df, file=filePath)\n}else{\n  load(filePath)\n}\n```\n:::\n\n\nTurn this into a raster. Need to tell raster that this is lat/long data.\n\n::: {.cell}\n\n```{.r .cell-code}\ndf2 <- data.frame(x=df$lon, y=df$lat, z=df$sst)\nras <- raster::rasterFromXYZ(df2, crs = \"+proj=longlat\")\n```\n:::\n\n\n## Plot the raster\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(raster)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nLoading required package: sp\n```\n:::\n\n```{.r .cell-code}\nlibrary(ggplot2)\ngg <- ggplot(df) +\n  geom_raster(aes(longitude, latitude, fill = sst)) +\n  scale_fill_gradient2(midpoint = mean(df$sst, na.rm = TRUE),\n                       low = \"blue\",\n                       mid = \"white\",\n                       high = \"red\") +\n  labs(x = NULL,\n       y = NULL,\n       fill = \"Celcius\",\n       title = \"Sea Surface Temperature (SST)\") +\n  theme_bw() +\n  scale_x_continuous(limits = lons, expand = c(-0.01, -0.01)) +\n  scale_y_continuous(limits = lats, expand = c(-0.01, -0.01))\ngg\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 248 rows containing missing values (`geom_raster()`).\n```\n:::\n\n::: {.cell-output-display}\n![](day7_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\n## Add a coastline\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncoast <- rnaturalearth::ne_coastline(scale = 50, returnclass = \"sp\")\nwa_or_coast <- raster::crop(coast, raster::extent(lons[1], lons[2], lats[1], lats[2]))\nplot(wa_or_coast)\n```\n\n::: {.cell-output-display}\n![](day7_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\nThe way that ggplot2 works is to run `fortify()` on the SpatialLines object to create a data frame. Then we use `geom_path()` to plot that. But if you look at the coast, you see lots of islands. We need to add `grouping` to tell geom_path() that there are these groups of paths in the data frame.\n\n::: {.cell}\n\n```{.r .cell-code}\ngg +\n  geom_path(data=wa_or_coast,  aes(x=long,y=lat, grouping=id), size=1, na.rm=TRUE)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nâ„¹ Please use `linewidth` instead.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in geom_path(data = wa_or_coast, aes(x = long, y = lat, grouping =\nid), : Ignoring unknown aesthetics: grouping\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 248 rows containing missing values (`geom_raster()`).\n```\n:::\n\n::: {.cell-output-display}\n![](day7_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::",
    "supporting": [
      "day7_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}