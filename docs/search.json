[
  {
    "objectID": "content/day16.html",
    "href": "content/day16.html",
    "title": "Day 16 tigris",
    "section": "",
    "text": "Minimal Roads from https://twitter.com/kyle_e_walker/status/1592857115928199169"
  },
  {
    "objectID": "content/day16.html#code-to-download-the-data",
    "href": "content/day16.html#code-to-download-the-data",
    "title": "Day 16 tigris",
    "section": "Code to download the data",
    "text": "Code to download the data\n\n\nCode\nlibrary(tigris)\nlibrary(tidyverse)\nlibrary(sf)\n\nsmallwood <- places(\"WA\", cb = TRUE) %>%\n  filter(str_detect(NAME, \"Winthrop\"))\n\nsmallwood_roads <- roads(\"WA\", \"Okanogan County\") %>%\n  st_intersection(smallwood) %>%\n  filter(st_is(., \"LINESTRING\"))"
  },
  {
    "objectID": "content/day16.html#plot-code",
    "href": "content/day16.html#plot-code",
    "title": "Day 16 tigris",
    "section": "Plot code",
    "text": "Plot code\n\n\nCode\nggplot(smallwood_roads) + \n  geom_sf() + \n  theme_minimal(base_size = 16) + \n  labs(title = \"Roads in Winthrop, WA\")\n\n\n\n\n\nUses tigris R package | @kyle_e_walker;"
  },
  {
    "objectID": "content/day8.html",
    "href": "content/day8.html",
    "title": "Day 8 sf",
    "section": "",
    "text": "Code from https://github.com/AbdoulMa/30DayMapChallenge/tree/main/Day8"
  },
  {
    "objectID": "content/day8.html#code-to-download-the-data",
    "href": "content/day8.html#code-to-download-the-data",
    "title": "Day 8 sf",
    "section": "Code to download the data",
    "text": "Code to download the data\n\n\nCode\nlibrary(osmdata)\nlibrary(sf)\nlibrary(tidyverse)\n\nbbx <- getbb(paste0(\"Winthrop\", \",\", \"Washington\"))\n# Get motorway, trunk, primary, secondary, tertiary ways ----\nhighways <- bbx %>%\n  opq() %>%\n  add_osm_feature(\n    key = \"highway\",\n    value = c(\n      \"motorway\",\n      \"trunk\",\n      \"primary\",\n      \"secondary\",\n      \"tertiary\",\n      \"motorway_link\",\n      \"trunk_link\",\n      \"primary_link\",\n      \"secondary_link\",\n      \"tertiary_link\"\n    )\n  ) %>%\n  osmdata_sf()\n\n# Get small streets, pedestrian paths, living streets ----\nstreets <- bbx %>%\n  opq() %>%\n  add_osm_feature(\n    key = \"highway\",\n    value = c(\n      \"residential\",\n      \"living_street\",\n      \"service\",\n      \"unclassified\",\n      \"pedestrian\",\n      \"footway\",\n      \"track\",\n      \"path\"\n    )\n  ) %>%\n  osmdata_sf()\n\n# Get landuse ---- \nlanduse <- opq(bbx) |> \n  add_osm_feature(key = \"landuse\") |> \n  osmdata_sf() |> \n  unname_osmdata_sf()\n\n# Get buildings ---- \nbuildings <- opq(bbx) |> \n  add_osm_feature(key = \"building\") %>%\n  osmdata_sf() |> \n  unname_osmdata_sf()\n\n# Center and circle ----\ncity_coords <- tibble(address = \"Winthrop, Washington\") |> \n  tidygeocoder::geocode(address, method = 'osm', long = long, lat = lat)\n\nlong <- city_coords$long[1]\nlat <- city_coords$lat[1]\n\ncrs2 <- 6384 # https://epsg.io/6384\ncenter_proj <-\n  tibble(long, lat) %>%\n  st_as_sf(coords = c(\"long\", \"lat\"), crs = 4326)\n\n# circle to crop in ----\ndist <-  3500\ncircle <- tibble(long, lat) %>%\n  st_as_sf(coords = c(\"long\", \"lat\"), crs = 4326) %>%\n  st_transform(crs = crs2) %>%\n  st_buffer(dist = dist) %>%\n  st_transform(crs = 4326)\n\nstreets_lines <- st_intersection(circle, streets$osm_lines)\nhighways_lines <- st_intersection(circle, highways$osm_lines)\nbuildings_polygons <- st_intersection(circle, buildings$osm_polygons)\nlanduse_polygons <- st_intersection(circle, landuse$osm_polygons)"
  },
  {
    "objectID": "content/day8.html#plot-code",
    "href": "content/day8.html#plot-code",
    "title": "Day 8 sf",
    "section": "Plot code",
    "text": "Plot code\n\n\nCode\nggplot() +\n  geom_sf(data = circle, color = \"black\", fill =  \"white\") +\n  geom_sf(\n    data = landuse_polygons,\n    fill = \"#646464\", \n    size = .05,\n    alpha = .95\n  ) + \n  geom_sf(\n    data = buildings_polygons, \n    size = .05,\n    fill = \"#c8c8c8\", \n    color = \"#c8c8c8\", \n    alpha = .75\n  ) + \n  geom_sf(\n    data = streets_lines,\n    col = \"grey40\",\n    size = .4,\n    alpha = .65\n  ) +\n  geom_sf(\n    data = highways_lines,\n    col = \"grey25\",\n    size = .6,\n    alpha = .8\n  ) +\n  ggtitle(\"Winthrop\") +\n  theme_void() + \n  theme(\n    plot.title = element_text(hjust = 0.5),\n    plot.background = element_rect(fill = \"grey98\", color = NA),\n    plot.margin = margin(b = 10)\n    )"
  },
  {
    "objectID": "content/day18.html",
    "href": "content/day18.html",
    "title": "Day 18 blue",
    "section": "",
    "text": "https://twitter.com/leeolney3/status/1593402445283180545\nhttps://github.com/leeolney3/30DayMapChallenge/blob/main/2022/scripts/18_Blue.R"
  },
  {
    "objectID": "content/day18.html#code-to-download-the-data",
    "href": "content/day18.html#code-to-download-the-data",
    "title": "Day 18 blue",
    "section": "Code to download the data",
    "text": "Code to download the data\n\n\nCode\nlibrary(tidyverse)\nlibrary(tigris)\nlibrary(sf)\nlibrary(ggtext)\nlibrary(showtext)\nshowtext_opts(dpi = 300)\nshowtext_auto(enable = TRUE)\n\n# Fonts\nfont_add_google(\"Sora\")\nf1 = \"Sora\"\nfont_add_google(\"Open Sans\")\nf2 = \"Open Sans\"\n\n# Data\nwater_area = area_water(\"washington\", \"okanogan county\", year = 2022) \nwater_linear = linear_water(\"washington\", \"okanogan county\", year = 2022) \n\n\nSet the bounding box.\n\n\nCode\nlibrary(osmdata)\nlibrary(sf)\nlibrary(tidyverse)\n\n# Center and circle ----\ncity_coords <- tibble(address = \"Winthrop, Washington\") |> \n  tidygeocoder::geocode(address, method = 'osm', long = long, lat = lat)\n\nlong <- city_coords$long[1]\nlat <- city_coords$lat[1]\n\ncrs2 <- 6384 # https://epsg.io/6384\ncenter_proj <-\n  tibble(long, lat) %>%\n  st_as_sf(coords = c(\"long\", \"lat\"), crs = 4326)\n\n# 10km circle to crop in ----\ndist <-  10000\ncircle <- tibble(long, lat) %>%\n  st_as_sf(coords = c(\"long\", \"lat\"), crs = 4326) %>%\n  st_transform(crs = crs2) %>%\n  st_buffer(dist = dist) %>%\n  st_transform(crs = 4326)\n\nwater_area_crop <- water_area %>%\n  st_transform(crs = 4326) %>%\n  st_intersection(circle)\nwater_linear_crop <- water_linear %>%\n  st_transform(crs = 4326) %>%\n  st_intersection(circle)"
  },
  {
    "objectID": "content/day18.html#plot-code",
    "href": "content/day18.html#plot-code",
    "title": "Day 18 blue",
    "section": "Plot code",
    "text": "Plot code\n\n\nCode\nggplot() +\n  geom_sf(data = circle, color = \"black\", fill =  \"white\") +\n  geom_sf(data=water_area_crop, fill=\"#173C6D\",color=\"#173C6D\", size=.4) +\n  geom_sf(data=water_linear_crop, color=\"#0096c7\", size=.3) +\n  coord_sf() +\n  theme_void() +\n  theme(\n    plot.subtitle = element_markdown(size=13, lineheight = 1, face=\"bold\", hjust=.5, margin=margin(t=-10)),\n    plot.title = element_markdown(family=f2, size=7.5, lineheight=1.4,margin=margin(l=-70, t=300, b=-350)),\n    plot.caption=element_text(family=f2,color=\"#33415c\",hjust = .5, size=7, margin=margin(t=-5)),\n    plot.margin=margin(t=0,l=3,r=.2,b=.3,unit=\"cm\"),\n    plot.background = element_rect(fill = \"grey98\", color = NA)\n    ) +\n  labs(subtitle=\"Winthrop, Washington\", \n       title=\"<span style='font-size:12pt;color:#173C6D'><b>Area hydrography</b></span><br><span style='color:#173C6D;'>(ponds, lakes, oceans, swamps)</span><br><br><span style='font-size:12pt;color:#0096c7'><b>Linear hydrography</b></span><br><span style='color:#0096c7'>(streams/rivers, braided streams, canals,<br>ditches, artificial paths, aqueducts)</span>\", \n       caption=\"#30DayMapChallenge 18 Color Friday: Blue\\nSource: US Census via {tigris} R package\")"
  },
  {
    "objectID": "content/day18b.html",
    "href": "content/day18b.html",
    "title": "Day 18 blue (b)",
    "section": "",
    "text": "Inspired by this https://twitter.com/imagineazhar/status/1593571328484790272 but then I went in a different direction."
  },
  {
    "objectID": "content/day18b.html#code-to-download-the-data",
    "href": "content/day18b.html#code-to-download-the-data",
    "title": "Day 18 blue (b)",
    "section": "Code to download the data",
    "text": "Code to download the data\n\n\nCode\nlibrary(marmap)\nlibrary(tidyverse)\nlibrary(sf)\nlibrary(sysfonts)\nlibrary(showtext)\nlibrary(ggtext)\n\n\n\n# ------ Typography ------ \n\nfont_add_google(\"Mukta\", \"title_font\")\nshowtext_auto()\n\ntitle_font <- \"title_font\"\n\n\n# ------ Color palette ------ \n\npalette <- colorRampPalette(c(\"#03045e\", \"#0077b6\", \"#00b4d8\",\n                              \"#90e0ef\", \"#caf0f8\", \"#caf0f8\"))\n\n# --- Coord\n\ncity_coords <- tibble(address = \"Seattle, Washington\") |> \n  tidygeocoder::geocode(address, method = 'osm', long = long, lat = lat)\n\nlong <- city_coords$long[1]\nlat <- city_coords$lat[1]\n\nbathmetry <- getNOAA.bathy(lat1 = lat, lat2 = lat+4, lon1 = long, lon2 = long-3, resolution = 1)\n\ndf <- fortify.bathy(bathmetry)|>\n  filter(z < 0)\n\n\nSet the bounding box.\n\n\nCode\ncrs2 <- 6384 # https://epsg.io/6384\n\n# 10km circle to crop in ----\ndist <-  70000\ncircle <- tibble(long=long-1, lat=lat+1) %>%\n  st_as_sf(coords = c(\"long\", \"lat\"), crs = 4326) %>%\n  st_transform(crs = crs2) %>%\n  st_buffer(dist = dist) %>%\n  st_transform(crs = 4326)\n\nbathy_crop <- df %>%\n  st_as_sf(coords = c(\"x\", \"y\"), crs = 4326) %>%\n  st_transform(crs = 4326) %>%\n  st_intersection(circle)"
  },
  {
    "objectID": "content/day18b.html#plot-code",
    "href": "content/day18b.html#plot-code",
    "title": "Day 18 blue (b)",
    "section": "Plot code",
    "text": "Plot code\n\n\nCode\nggplot(df) +\n  geom_tile(aes(x = x, y = y, fill = z)) +\n  coord_sf(ylim = c(lat, lat+3), xlim = c(long, long-3), expand = FALSE) +\n  geom_sf(data = circle, color = \"black\", fill =  NA) +\n  scale_fill_gradientn(colors = palette(10),\n                       labels = function(x) format(-x, big.mark = \" \", trim = TRUE)) +\n  guides(fill = guide_colorbar(label.position = \"left\", title = \"Depth (m)\")) +\n  theme_void() +\n  theme(\n    legend.position = \"right\",\n    legend.key.height = unit(2.5, \"line\"),\n    legend.key.width = unit(0.75, \"line\"),\n    plot.background = element_rect(fill = \"#FFFBF8\", color = NA),\n    plot.title = element_markdown(size=7.5)\n    ) + \n  ggtitle(\"Circle is the region of interest\")\n\n\nCoordinate system already present. Adding new coordinate system, which will\nreplace the existing one.\n\n\n\n\n\n\n\nCode\nggplot() +\n  geom_sf(data = circle, color = \"black\", fill =  \"white\") +\ngeom_sf(data=bathy_crop, aes(color=z), size=1) +\n  ggtitle(\"Puget Sound Bathymetry\") +\nscale_color_gradientn(colors = palette(10),\n                       labels = function(x) format(-x, big.mark = \" \", trim = TRUE)) +\n  guides(color = guide_colorbar(label.position = \"left\", title = \"Depth (m)\"))"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Eli’s 30 Maps",
    "section": "",
    "text": "I am finding others code on Twitter and using that."
  },
  {
    "objectID": "index.html#examples",
    "href": "index.html#examples",
    "title": "Eli’s 30 Maps",
    "section": "Examples",
    "text": "Examples\n\n\n\n\n\nDay 8\n\n\n\n\n\nDay 16\n\n\n\n\n\n\n\nDay 18\n\n\n\n\n\nDay 18b"
  }
]